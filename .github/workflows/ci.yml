---
name: CI
on: [push]

jobs:
  build:
    name: CI Image Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/missioninbox/postal:ci-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ci
          platforms: linux/amd64

  release-branch:
    name: Release (branch)
    runs-on: ubuntu-latest
    needs: [build]
    if: >-
      startsWith(github.ref, 'refs/heads/') &&
      startsWith(github.ref, 'refs/heads/dependabot/') != true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: info
        run: |
          IMAGE=ghcr.io/missioninbox/postal

          REF="${GITHUB_REF#refs/heads/}"
          if [ -z "$REF" ]; then exit 1; fi

          VER="$(git describe --tags 2>/dev/null)"
          echo "version=${VER}" >> "$GITHUB_OUTPUT"
          echo "branch=${REF}" >> "$GITHUB_OUTPUT"

          echo 'tags<<EOF' >> "$GITHUB_OUTPUT"
          if [[ "$REF" == "main" ]]; then
            echo "${IMAGE}:latest" >> "$GITHUB_OUTPUT"
          else
            echo "${IMAGE}:branch-${REF}" >> "$GITHUB_OUTPUT"
          fi
          echo 'EOF' >> "$GITHUB_OUTPUT"
      - uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.info.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: full
          platforms: linux/amd64
          build-args: |
            VERSION=${{ steps.info.outputs.version }}
            BRANCH=${{ steps.info.outputs.branch }}
